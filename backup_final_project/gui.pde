/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:969096:
  appc.background(230);
} //_CODE_:window1:969096:

public void addswitches(GButton source, GEvent event) { //_CODE_:addswitch:390153:
  Switch temps=new Switch(int(random(100, 600)), int(random(100, 600)));
  switchlist.add(temps);
} //_CODE_:addswitch:390153:

public void lightbulb(GButton source, GEvent event) { //_CODE_:addlight:981093:
  Light templ=new Light(int(random(100, 600)), int(random(100, 600)));
  lightlist.add(templ);
  
} //_CODE_:addlight:981093:

public void notgg(GButton source, GEvent event) { //_CODE_:notgate:635071:
  Gate bill=new Gate(int(random(100, 600)), int(random(100, 600)),1);
  gatelist.add(bill);
} //_CODE_:notgate:635071:

public void addinput(GButton source, GEvent event) { //_CODE_:button1:361252:
  if (gateclicked)
  tempgate.addinput();
} //_CODE_:button1:361252:

public void andadd(GButton source, GEvent event) { //_CODE_:buttonand:458575:
  Gate bill=new Gate(int(random(100, 600)), int(random(100, 600)),0);
  gatelist.add(bill);
} //_CODE_:buttonand:458575:

public void addor(GButton source, GEvent event) { //_CODE_:button2:311395:
  Gate bill=new Gate(int(random(100, 600)), int(random(100, 600)),2);
  gatelist.add(bill);
} //_CODE_:button2:311395:

public void addclock(GButton source, GEvent event) { //_CODE_:buttonclock:485249:
  Switch temps=new Switch(int(random(100, 600)), int(random(100, 600)));
  temps.clock=true;
  switchlist.add(temps);
} //_CODE_:buttonclock:485249:

public void inputminus(GButton source, GEvent event) { //_CODE_:buttonminus:591902:
  if (gateclicked)
  tempgate.removeinput();
} //_CODE_:buttonminus:591902:

public void Splitted(GButton source, GEvent event) { //_CODE_:buttonsplit:732394:
  Split useful=new Split(int(random(100, 600)), int(random(100, 600)));
  splitlist.add(useful);
} //_CODE_:buttonsplit:732394:

public void trolling(GButton source, GEvent event) { //_CODE_:buttontroll:780722:
  troll=!troll;
} //_CODE_:buttontroll:780722:

public void clearing(GButton source, GEvent event) { //_CODE_:buttonclear:724231:
cleare();
  } //_CODE_:buttonclear:724231:

public void Talbot(GButton source, GEvent event) { //_CODE_:Talbotton:419763:
  Gate bill=new Gate(int(random(100, 600)), int(random(100, 600)),10);
  gatelist.add(bill);
} //_CODE_:Talbotton:419763:

public void setone(GButton source, GEvent event) { //_CODE_:buttonset1:562945:
  cleare();
  addsplitsrec(100, layer, layer);
  
  
  
} //_CODE_:buttonset1:562945:

public void xor(GButton source, GEvent event) { //_CODE_:buttonxor:783587:
  println("buttonxor - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:buttonxor:783587:

public void preset1layer(GSlider source, GEvent event) { //_CODE_:sliderpreset1:652473:
  float a=source.getValueF();
  layer=int(a);
} //_CODE_:sliderpreset1:652473:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("Sketch Window");
  window1 = GWindow.getWindow(this, "Window title", 0, 0, 700, 500, JAVA2D);
  window1.noLoop();
  window1.addDrawHandler(this, "win_draw1");
  addswitch = new GButton(window1, 102, 28, 80, 30);
  addswitch.setText("switch");
  addswitch.addEventHandler(this, "addswitches");
  addlight = new GButton(window1, 108, 272, 80, 30);
  addlight.setText("Light bulb");
  addlight.addEventHandler(this, "lightbulb");
  notgate = new GButton(window1, 0, 130, 80, 30);
  notgate.setText("Not gate");
  notgate.addEventHandler(this, "notgg");
  button1 = new GButton(window1, 262, 169, 80, 30);
  button1.setText("plusinputs");
  button1.addEventHandler(this, "addinput");
  buttonand = new GButton(window1, 0, 170, 80, 30);
  buttonand.setText("And gate");
  buttonand.addEventHandler(this, "andadd");
  button2 = new GButton(window1, 0, 210, 80, 30);
  button2.setText("Or gate");
  button2.addEventHandler(this, "addor");
  buttonclock = new GButton(window1, 215, 40, 80, 30);
  buttonclock.setText("Clock");
  buttonclock.addEventHandler(this, "addclock");
  buttonminus = new GButton(window1, 266, 222, 80, 30);
  buttonminus.setText("minusinput");
  buttonminus.addEventHandler(this, "inputminus");
  buttonsplit = new GButton(window1, 160, 163, 80, 30);
  buttonsplit.setText("Split");
  buttonsplit.addEventHandler(this, "Splitted");
  buttontroll = new GButton(window1, 240, 289, 80, 30);
  buttontroll.setText("troll");
  buttontroll.addEventHandler(this, "trolling");
  buttonclear = new GButton(window1, 309, 8, 80, 30);
  buttonclear.setText("clear");
  buttonclear.addEventHandler(this, "clearing");
  Talbotton = new GButton(window1, 1, 250, 80, 30);
  Talbotton.setText("Talbot gate");
  Talbotton.addEventHandler(this, "Talbot");
  buttonset1 = new GButton(window1, 312, 61, 80, 30);
  buttonset1.setText("Preset 1");
  buttonset1.addEventHandler(this, "setone");
  buttonxor = new GButton(window1, -2, 308, 80, 30);
  buttonxor.setText("XOR");
  buttonxor.addEventHandler(this, "xor");
  sliderpreset1 = new GSlider(window1, 402, 57, 100, 40, 10.0);
  sliderpreset1.setShowValue(true);
  sliderpreset1.setLimits(1, 1, 4);
  sliderpreset1.setShowTicks(true);
  sliderpreset1.setNumberFormat(G4P.INTEGER, 0);
  sliderpreset1.setOpaque(false);
  sliderpreset1.addEventHandler(this, "preset1layer");
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window1;
GButton addswitch; 
GButton addlight; 
GButton notgate; 
GButton button1; 
GButton buttonand; 
GButton button2; 
GButton buttonclock; 
GButton buttonminus; 
GButton buttonsplit; 
GButton buttontroll; 
GButton buttonclear; 
GButton Talbotton; 
GButton buttonset1; 
GButton buttonxor; 
GSlider sliderpreset1; 
